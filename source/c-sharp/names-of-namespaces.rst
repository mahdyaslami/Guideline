.. rst-class:: persian

نام فضاهای نامی
===============

:doc:`English <names-of-namespaces-en>`

همانند سایر دستورالعمل های نامگذاری، هدف نامگذاری فضاهای نامی ایجاد یک نام صریح 
و مناسب برای برنامه نویسی است که از framework استفاده می کند به طوریکه با دیدن 
آن بلافاصله متوجه شود که محتوای فضای نام به چه شکلی می تواند باشد، الگوی زیر 
قانون عمومی برای نامگذاری فضاهای نامی را مشخص می کند:

``<Company>.(<Product>|<Technology>)[.<Feature>][.<Subnamespace>]``

به عنوان مثال:

| ``Fabrikam.Math``
| ``Litware.Security``

**✓ انجام دهید** حتما نام شرکت را در پیشوند فضای نامی استفاده کنید تا با 
فضاهای نامی شرکت های دیگر تلاقی نداشته باشد.

**✓ انجام دهید** یک نام ثابت و مستقل از نسخه محصول را برای سطح دوم فضای نامی در
نظر بگیرید.

**X انجام ندهید** استفاده از سلسله مراتب سازمانی برای نامگذاری سلسله مراتب 
فضاهای نامی، زیرا نام گروه ها در شرکت ها معمولا عمر کوتاهی دارند و تغییر می کنند.
فضاهای نامی را براساس گروه های تکنولوژی ها به صورت سلسله مراتبی سازماندهی کنید.

**✓ انجام دهید** از PascalCasing برای شکل کلمات استفاده کنید و اجزاء فضای نام را 
با یک نقطه از همدیگر جدا کنید مثال ``Microsoft.Office.PowerPoint``. البته اگر
شرکت شما استاندارد دیگری برای نامگذاری فضا های نامی دارد از آن استفاده کنید.

**✓ لحاظ کنید** از اسم های جمع و عام برای نام گذاری فضا های نامی استفاده کنید.

برای مثال، از ``System.Collections`` به جای ``System.Collection`` استفاده کنید. 
نام شرکت و مخفف ها استثنا هستند. برای نمونه، از ``System.IO`` به جای 
``System.IOs`` استفاده کنید.

**X انجام ندهید** استفاده از نام مشترک برای فضای نامی و نام نوع یا class.

برای مثال، وقتی نام یک class را ``Debug`` گذاشته اید نباید نام فضای نام آن 
``Debug`` انتخاب شود. بعضی از کامپایلر ها نیاز دارند که نام کاملا منحصر به فردی 
مورد استفاده قرار بگیرد.

تلاقی نام فضای نامی و انواع
---------------------------

**X انجام ندهید** استفاده از نام های عمومی برای انواع مثل ``Element``، ``Node``، 
``Log`` و ``Message``.

به طور معمول این احتمال زیاد است که تلاقی بین نام نوع ها (class ها) داشته باشیم 
به همین دلیل باید نام های عمومی class ها را به صورت منحصر بفرد در بیاورید 
(``FormElement``،``XmlNode``،``EventLog``،``SoapMessage``).

یک خط مشی اختصاصی برای جلوگیری از تلاقی نام نوع ها در فضاهای نامی مختلف نیز وجود
دارد.

-  **فضا های نامی مدل کاربری**

   فضاهای نامی متعلق به یک مدل کاربردی تنها در اغلب موارد با یکدیگر استفاده می 
   شوند، اما تقریبا هرگز با فضاهای نامی دیگر مدل های کاربردی مورد استفاده قرار 
   نمی گیرند. به عنوان مثال، نام فضای نام ``System.Windows.Forms`` بسیار به ندرت 
   همراه با نام نام ``System.Web.UI`` استفاده می شود. در زیر لیستی از گروه های 
   فضای نامی شناخته شده مدل کاربردی وجود دارد:

   | ``System.Windows*``
   | ``System.Web.UI*``

   **X انجام ندهید** دادن نام یکسان به یک نوع (class) و فضای نام درون یک مدل 
   کاربردی

   برای مثال، نوعی با نام ``Page`` به فضای نام ``System.Web.UI.Adapters`` اضافه 
   نکنید زیرا فضای نام ``System.Web.UI`` یک نوع با نام ``Page`` دارد.

-  **فضاهای نام زیر ساخت**

   فضاهای نامی که خیلی به ندرت در توسعه برنامه های کاربردی عمومی مورد استفاده 
   قرار می گیرند برای مثال، فضای نام ``.Design`` اساسا وقتی مورد استفاده قرار 
   میگیرد که قصد ساخت یک ابزار برنامه نویسی داشته باشید. در این نوع فضاهای نامی 
   ضرورتی برای جلوگیری از تکرار شدن نام نوع هایشان با فضا های نامی دیگر وجود 
   ندارد.

-  **فضا های نام مرکزی**

   فضا های نام مرکزی شامل همه فضا های نام ``System``، بغیر از فضا های نامی مدل 
   های کابردی و زیرساخت هاست. از جمله فضا های نامی مرکزی ``System``، 
   ``System.IO``، ``System.Xml`` و ``System.Net`` است.

   **X انجام ندهید** انتخاب کردن نام نوعی که با نام نوع های فضا های نامی مرکزی 
   تلاقی داشته باشد.

   برای مثال، هرگز نام ``Stream`` را برای یک نوع انتخاب نکنید زیرا با فضای نام 
   ``System.IO.Stream`` تلاقی دارد و معمولا هم مورد استفاده قرار میگیرد.

-  **گروه تکنولوژی یک فضای نام**

   این دسته شامل همه فضا های نامی میشود که دو بخش اول آنها یکسان است 
   ``(<Company>.<Technology>*)``، برای مثال ``Mircrosoft.Build.Utilities`` و 
   ``Microsoft.Build.Tasks``. این خیلی مهم هست که انواع متعلق به یک تکنولوژی با 
   هم همنام نباشند.

   **X انجام ندهید** انتخاب نام نوعی که با یکی از نوع ها در یک تکنولوژی تلاقی 
   داشته باشد.

   **X انجام ندهید** انتخاب نام برای یک نوع در یک تکنولوژی که نوع همنامی درون 
   مدل کاربردی داشته باشد مگر اینکه از این تکنولوژی درون آند مدل کاربری استفاده 
   نشود.
